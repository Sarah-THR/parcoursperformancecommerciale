@using EcoleDeLaPerformance.Ui.Interfaces
@using EcoleDeLaPerformance.Ui.Models
@using EcoleDeLaPerformance.Ui.Services
@using EcoleDeLaPerformance.Ui.Shared.Dialog
@using EcoleDeLaPerformance.Ui.Shared.Components
@inject StateContainerService stateContainerService
@inject IUserService userService
@inject IDialogService dialog
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@page "/manageteam"

<div>
   @*  <MudGrid Class="mt-8 d-flex align-items-center">
        <MudItem md="12" xs="12" lg="12" Class="d-flex align-baseline">
            <MudText Typo="Typo.h4" Color="Color.Primary" Class="fw-bold text-uppercase">Gérer mon équipe <img src="/images/TeamManage.png" width="30px" class="ms-2" /></MudText>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" Class="ml-auto mt-5" OnClick="@(async () => await CreateUser())">Ajouter un utilisateur</MudButton>
        </MudItem>
        <MudItem md="12" xs="12" lg="12" Class="d-flex align-baseline">
            <ManageUserTable userInfo="userInfo" usersList="studentList"/>
        </MudItem>
    </MudGrid> *@
</div>

@code {
    // public User userInfo => stateContainerService.UserInfo;
    // List<User?> studentList = new List<User?>();

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        // if (userInfo.Role != "Manager")
        // {
        //     NavigationManager.NavigateTo("/");
        // }
        // else
        // {
        //     studentList = await userService.GetAllApprenticesBySupervisorId(userInfo.UserId);
        // }
    }

    // private async Task CreateUser()
    // {
    //     var parameters = new DialogParameters<AddUserDialog>();

    //     parameters.Add("userInfo", userInfo);
    //     var options = new DialogOptions() { MaxWidth = MaxWidth.Medium, CloseButton = true, ClassBackground = "DialogBackgroundBlurEffect", FullWidth = true };
    //     var dialogresponse = await (await dialog.ShowAsync<AddUserDialog>("Ajouter un commercial junior", parameters, options)).Result;
    //     if (!dialogresponse.Canceled)
    //     {
    //         await OnInitializedAsync();
    //         StateHasChanged();
    //     }
    // }
}
