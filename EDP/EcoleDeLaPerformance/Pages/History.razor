@using EcoleDeLaPerformance.Ui.Models.BI
@using EcoleDeLaPerformance.Ui.Services
@using EcoleDeLaPerformance.Ui.Interfaces;
@using EcoleDeLaPerformance.Ui.Shared.Components
@using EcoleDeLaPerformance.Ui.Models
@inject StateContainerService stateContainerService
@inject IContractService contractService
@inject ISnackbar snackbar
@inject IUserService userService
@inject NavigationManager navigationManager
@page "/history"

<PageTitle>Historique</PageTitle>

<div class="px-6">
    <MudPaper Class="p-4 mb-6">
        <MudStack Row AlignItems="AlignItems.Center" Spacing="2" Class="mb-4">
            <MudIcon Icon="@Icons.Material.Filled.History" Color="Color.Secondary" Size="Size.Large" />
            <MudText Typo="Typo.h6">Historique</MudText>
        </MudStack>
        <MudTable T="TempClass" Items="@allWeeks" Hover="true" OnRowClick="RowClickEvent">
            <HeaderContent>
                <MudTh><MudText Color="Color.Primary"><strong>Semaines passées</strong></MudText></MudTh>
                <MudTh><MudText Color="Color.Primary"><strong>Sauvegarde</strong></MudText></MudTh>
                <MudTh><MudText Color="Color.Primary"><strong>Maintenance</strong></MudText></MudTh>
                <MudTh><MudText Color="Color.Primary"><strong>Sécurité</strong></MudText></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Semaines passées">@("Semaine du " + context.planning.CreatedAt.AddDays(-((int)context.planning.CreatedAt.DayOfWeek == 0 ? 6 : (int)context.planning.CreatedAt.DayOfWeek - 1)).ToShortDateString())</MudTd>
                <MudTd DataLabel="Sécurité">@(context.signedContractList.Count(x => x.Sauvegarde == "OUI"))</MudTd>
                <MudTd DataLabel="Maintenance">@(context.signedContractList.Count(x => x.Maintenance == "OUI"))</MudTd>
                <MudTd DataLabel="Sauvegarde">@(context.signedContractList.Count(x => x.Sécurité == "OUI"))</MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>
</div>

@code {
    public User userInfo => stateContainerService.UserInfo;
    double[] contractData;
    List<TempClass> allWeeks = new();

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        foreach (var week in userInfo.Plannings)
        {
            TempClass temp = new TempClass();
            temp.planning = week;

            DateTime firstWeekDay = week.CreatedAt.AddDays(-((int)week.CreatedAt.DayOfWeek == 0 ? 6 : (int)week.CreatedAt.DayOfWeek - 1));
            DateTime lastWeekDay = week.CreatedAt.AddDays(5 - ((int)week.CreatedAt.DayOfWeek == 0 ? 7 : (int)week.CreatedAt.DayOfWeek));

            temp.signedContractList = contractService.GetContractsByPeriod(userInfo.Name, DateOnly.FromDateTime(firstWeekDay), DateOnly.FromDateTime(lastWeekDay));
            allWeeks.Add(temp);
        }
    }

    public class TempClass
    {
        public Models.Planning planning { get; set; } = new Models.Planning();
        public List<EcolePerformanceSm?> signedContractList { get; set; } = new List<EcolePerformanceSm?>();
    }

    private void RowClickEvent(TableRowClickEventArgs<TempClass> tableRowClickEventArgs)
    {
        navigationManager.NavigateTo($"/details/{userInfo.Id}/{tableRowClickEventArgs.Item.planning.Id}");
    }
}
