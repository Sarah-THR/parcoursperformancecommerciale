@using EcoleDeLaPerformance.Ui.Services
@using EcoleDeLaPerformance.Ui.Interfaces;
@using EcoleDeLaPerformance.Ui.Shared.Components
@using EcoleDeLaPerformance.Ui.Models
@inject StateContainerService stateContainerService
@inject IContractService contractService
@inject ISnackbar snackbar
@inject IUserService userService
@inject NavigationManager navigationManager

@page "/history"

<div class="px-6">
    <MudPaper Class="p-4 mb-6">
        <MudStack Row AlignItems="AlignItems.Center" Spacing="2" Class="mb-4">
            <MudIcon Icon="@Icons.Material.Filled.History" Color="Color.Secondary" Size="Size.Large" />
            <MudText Typo="Typo.h6">Historique</MudText>
        </MudStack>
        <MudTable Items="@allWeek" Hover="true">
            <HeaderContent>
                <MudTh><MudText Color="Color.Primary"><strong>Semaines passées</strong></MudText></MudTh>
                <MudTh><MudText Color="Color.Primary"><strong>Sauvegarde</strong></MudText></MudTh>
                <MudTh><MudText Color="Color.Primary"><strong>Maintenance</strong></MudText></MudTh>
                <MudTh><MudText Color="Color.Primary"><strong>Sécurité</strong></MudText></MudTh>
            </HeaderContent>
            <RowTemplate>
                @* <MudTd DataLabel="Semaines passées">@("Semaine " + context.week.WeekNumber.ToString())</MudTd>
                            <MudTd DataLabel="Sécurité">@(context.signedContractList.Count(x => x.Sauvegarde == "OUI"))</MudTd>
                            <MudTd DataLabel="Maintenance">@(context.signedContractList.Count(x => x.Maintenance == "OUI"))</MudTd>
                            <MudTd DataLabel="Sauvegarde">@(context.signedContractList.Count(x => x.Sécurité == "OUI"))</MudTd> *@
            </RowTemplate>
        </MudTable>
    </MudPaper>
</div>

@code {
    List<string> allWeek = new();
    public User userInfo => stateContainerService.UserInfo;
    int period = 0;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        // if (!userInfo.Role.Contains("Commercial"))
        // {
        //     navigationManager.NavigateTo("/");
        // }
        // else
        // {
        //     try
        //     {
        //         var weekListFromTheStart = userInfo.Weeks.Where(x => x.EndDateWeek <= DateOnly.FromDateTime(DateTime.Now)).ToList();
        //         foreach (var oneWeek in weekListFromTheStart)
        //         {
        //             TempClass temp = new TempClass();
        //             temp.week = oneWeek;

        //             var studentName = (userInfo.FirstName + " " + userInfo.LastName);

        //             temp.signedContractList = contractService.GetContractsByPeriod(studentName, oneWeek.StartDateWeek, oneWeek.EndDateWeek);

        //             var nbOpenAccounts = await userService.GetNbOpenAccountsAsync(userInfo.FirstName + " " + userInfo.LastName.ToUpper());
        //             temp.openAccounts = new CRMData { Label = "", Amount = nbOpenAccounts };
        //             allWeek.Add(temp);
        //         }
        //         var currentDate = DateOnly.FromDateTime(DateTime.UtcNow);
        //         var currentWeek = userInfo.Weeks.FirstOrDefault(week => week.StartDateWeek <= currentDate && week.EndDateWeek >= currentDate);
        //         if (currentWeek != null)
        //         {
        //             period = currentWeek.PeriodNumber;
        //         }
        //     }
        //     catch (Exception ex)
        //     {
        //         SentrySdk.CaptureException(ex);
        //         snackbar.Add("Une erreur est survenue. Contactez l'administrateur", Severity.Error);
        //     }
        // }

    }

    // public class TempClass
    // {
    //     public Week week { get; set; } = new Week();
    //     public List<SignedContract?> signedContractList { get; set; } = new List<SignedContract?>();
    //     public CRMData openAccounts { get; set; }
    // }

    // public void RowClicked(TableRowClickEventArgs<TempClass> week)
    // {
    //     navigationManager.NavigateTo($"/summary/{week.Item.week.WeekId}");
    // }
}
