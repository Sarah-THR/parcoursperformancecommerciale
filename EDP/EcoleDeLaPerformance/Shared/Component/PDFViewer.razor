@using EcoleDeLaPerformance.Ui.Models
@inject IJSRuntime js

@* <div>
    <MudGrid Justify="Justify.FlexStart" Class="align-items-center mb-5">
        @if (startIndex > 0)
        {
            <MudItem sm="12" md="1" lg="1" Class="w-100">
                <MudIconButton Icon="@Icons.Material.Outlined.ArrowCircleLeft" Color="Color.Primary" @onclick="PreviousPage" Size="Size.Large"></MudIconButton>
            </MudItem>
        }

        @foreach (var file in visibleFilesList)
        {
            <MudItem sm="12" md="2" lg="2" Class="w-100">
                <MudButton Variant="@(file == selectedFile ? Variant.Filled : Variant.Outlined)" Color="Color.Primary" @onclick="@(p =>OpenToIFrame("iframeId", file.Pdffile))">@file.Title</MudButton>
            </MudItem>
        }

        @if (startIndex + 5 < filesList.Count)
        {
            <MudItem sm="12" md="1" lg="1" Class="w-100">
                <MudIconButton Icon="@Icons.Material.Outlined.ArrowCircleRight" Color="Color.Primary" @onclick="NextPage" Size="Size.Large"></MudIconButton>
            </MudItem>
        }
    </MudGrid>
</div>

<div id="iframeId"></div> *@

@code {
    // [Parameter]
    // public List<Document> filesList { get; set; }

    // private List<Document> visibleFilesList => filesList.Skip(startIndex).Take(5).ToList();

    // private int startIndex { get; set; } = 0;

    // private Document selectedFile { get; set; }

    // private bool isFirstRender = true;

    protected override void OnInitialized()
    {
        // if (filesList != null && filesList.Count > 0)
        // {
        //     selectedFile = filesList.FirstOrDefault(f => f.Pdffile == filesList[0].Pdffile);
        // }
    }

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {
    //     if (firstRender && isFirstRender)
    //     {
    //         isFirstRender = false;
    //         if (filesList != null && filesList.Count > 0)
    //         {
    //             OpenToIFrame("iframeId", filesList[0].Pdffile);
    //         }
    //     }
    // }

    // private void OpenToIFrame(string idIFrame, string pdfFile)
    // {
    //     js.InvokeVoidAsync("ViewPDF", idIFrame, pdfFile);
    //     selectedFile = filesList.FirstOrDefault(f => f.Pdffile == pdfFile);
    // }

    // private async void PreviousPage()
    // {
    //     startIndex -= 5;
    // }

    // private async void NextPage()
    // {
    //     startIndex += 5;
    // }

}
