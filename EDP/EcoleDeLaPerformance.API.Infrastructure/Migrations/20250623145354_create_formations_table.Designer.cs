// <auto-generated />
using System;
using EcoleDeLaPerformance.API.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcoleDeLaPerformance.API.Infrastructure.Migrations
{
    [DbContext(typeof(ParcoursPerformanceCommercialContext))]
    [Migration("20250623145354_create_formations_table")]
    partial class create_formations_table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Agency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Agencies__3213E83FFE67BF43");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.BriefNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brief")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("brief");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__BriefNot__3213E83F7057F2F9");

                    b.HasIndex("UserId");

                    b.ToTable("BriefNotes");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Classes__3213E83F5045BC14");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("classId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<string>("File")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("file");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updatedBy");

                    b.HasKey("Id")
                        .HasName("PK__Document__1ABEEF0F1BE55F2F");

                    b.HasIndex("ClassId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Evaluati__3213E83FF20A7835");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Formation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Formatio__3213E83FF938B3D5");

                    b.ToTable("Formations");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.HalfDayPlanning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("HalfDayDate")
                        .HasColumnType("datetime")
                        .HasColumnName("halfDayDate");

                    b.Property<bool?>("HalfDayTime")
                        .HasColumnType("bit")
                        .HasColumnName("halfDayTime");

                    b.Property<int>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("taskId");

                    b.Property<int>("WeekId")
                        .HasColumnType("int")
                        .HasColumnName("weekId");

                    b.HasKey("Id")
                        .HasName("PK__HalfDayP__D4599D0FADCFD35A");

                    b.HasIndex("TaskId");

                    b.HasIndex("WeekId");

                    b.ToTable("HalfDayPlannings");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Permissi__3213E83F00E1E37D");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3213E83F46221B44");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__States__3213E83F71E8FB71");

                    b.ToTable("States");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Origin")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("origin");

                    b.Property<string>("Title")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Tasks__3213E83F26C748C2");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("endDate");

                    b.Property<string>("Entity")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("entity");

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("firstName");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("lastName");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("profilePicture");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int")
                        .HasColumnName("supervisorId");

                    b.HasKey("Id")
                        .HasName("PK__Users__3213E83FC231B785");

                    b.HasIndex("RoleId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.UserFormation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("comment");

                    b.Property<int>("EvaluationId")
                        .HasColumnType("int")
                        .HasColumnName("evaluationId");

                    b.Property<int>("FormationId")
                        .HasColumnType("int")
                        .HasColumnName("formationId");

                    b.Property<bool?>("IsCheck")
                        .HasColumnType("bit")
                        .HasColumnName("isCheck");

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("stateId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__UserForm__3213E83F196B82AA");

                    b.HasIndex("EvaluationId");

                    b.HasIndex("FormationId");

                    b.HasIndex("StateId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFormations");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Week", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDateWeek")
                        .HasColumnType("date")
                        .HasColumnName("endDateWeek");

                    b.Property<bool?>("IsDraft")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDraft");

                    b.Property<int>("PeriodNumber")
                        .HasColumnType("int")
                        .HasColumnName("periodNumber");

                    b.Property<DateOnly>("StartDateWeek")
                        .HasColumnType("date")
                        .HasColumnName("startDateWeek");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int")
                        .HasColumnName("weekNumber");

                    b.HasKey("Id")
                        .HasName("PK__Weeks__3213E83F88BAC7E5");

                    b.HasIndex("UserId");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int")
                        .HasColumnName("permissionId");

                    b.HasKey("RoleId", "PermissionId")
                        .HasName("PK__RolePerm__101A5503EAC5AE42");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions", (string)null);
                });

            modelBuilder.Entity("UserAgency", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<int>("AgencyId")
                        .HasColumnType("int")
                        .HasColumnName("agencyId");

                    b.HasKey("UserId", "AgencyId")
                        .HasName("PK__UserAgen__3B770C2ECF2CCFB9");

                    b.HasIndex("AgencyId");

                    b.ToTable("UserAgencies", (string)null);
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.BriefNote", b =>
                {
                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.User", "User")
                        .WithMany("BriefNotes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__BriefNote__UserI__276EDEB3");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Document", b =>
                {
                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.Class", "Class")
                        .WithMany("Documents")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Document__ClassI__3A81B327");

                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.User", "CreatedByNavigation")
                        .WithMany("DocumentCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Document__Create__38996AB5");

                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.User", "UpdatedByNavigation")
                        .WithMany("DocumentUpdatedByNavigations")
                        .HasForeignKey("UpdatedBy")
                        .HasConstraintName("FK__Document__Update__398D8EEE");

                    b.Navigation("Class");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("UpdatedByNavigation");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.HalfDayPlanning", b =>
                {
                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.Task", "Task")
                        .WithMany("HalfDayPlannings")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("FK__HalfDayPl__TaskI__35BCFE0A");

                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.Week", "Week")
                        .WithMany("HalfDayPlannings")
                        .HasForeignKey("WeekId")
                        .IsRequired()
                        .HasConstraintName("FK__HalfDayPl__WeekI__34C8D9D1");

                    b.Navigation("Task");

                    b.Navigation("Week");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.User", b =>
                {
                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__roleId__18EBB532");

                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.User", "Supervisor")
                        .WithMany("InverseSupervisor")
                        .HasForeignKey("SupervisorId")
                        .HasConstraintName("FK__Users__superviso__19DFD96B");

                    b.Navigation("Role");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.UserFormation", b =>
                {
                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.Evaluation", "Evaluation")
                        .WithMany("UserFormations")
                        .HasForeignKey("EvaluationId")
                        .IsRequired()
                        .HasConstraintName("FK__UserForma__evalu__2A164134");

                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.Formation", "Formation")
                        .WithMany("UserFormations")
                        .HasForeignKey("FormationId")
                        .IsRequired()
                        .HasConstraintName("FK__UserForma__forma__2B0A656D");

                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.State", "State")
                        .WithMany("UserFormations")
                        .HasForeignKey("StateId")
                        .IsRequired()
                        .HasConstraintName("FK__UserForma__state__2BFE89A6");

                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.User", "User")
                        .WithMany("UserFormations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserForma__userI__2CF2ADDF");

                    b.Navigation("Evaluation");

                    b.Navigation("Formation");

                    b.Navigation("State");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Week", b =>
                {
                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.User", "User")
                        .WithMany("Weeks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Week__UserId__2A4B4B5E");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RolePermission", b =>
                {
                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .IsRequired()
                        .HasConstraintName("FK__RolePermi__permi__0F624AF8");

                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__RolePermi__roleI__10566F31");
                });

            modelBuilder.Entity("UserAgency", b =>
                {
                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.Agency", null)
                        .WithMany()
                        .HasForeignKey("AgencyId")
                        .IsRequired()
                        .HasConstraintName("FK__UserAgenc__agenc__2FCF1A8A");

                    b.HasOne("EcoleDeLaPerformance.API.Core.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserAgenc__userI__30C33EC3");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Class", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Evaluation", b =>
                {
                    b.Navigation("UserFormations");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Formation", b =>
                {
                    b.Navigation("UserFormations");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.State", b =>
                {
                    b.Navigation("UserFormations");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Task", b =>
                {
                    b.Navigation("HalfDayPlannings");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.User", b =>
                {
                    b.Navigation("BriefNotes");

                    b.Navigation("DocumentCreatedByNavigations");

                    b.Navigation("DocumentUpdatedByNavigations");

                    b.Navigation("InverseSupervisor");

                    b.Navigation("UserFormations");

                    b.Navigation("Weeks");
                });

            modelBuilder.Entity("EcoleDeLaPerformance.API.Core.Domain.Entities.Week", b =>
                {
                    b.Navigation("HalfDayPlannings");
                });
#pragma warning restore 612, 618
        }
    }
}
